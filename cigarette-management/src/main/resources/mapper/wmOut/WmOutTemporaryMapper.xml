<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.wmOut.mapper.WmOutTemporaryMapper">

    <resultMap type="com.ruoyi.wmOut.domain.WmOutTemporary" id="WmOutTemporaryResult">
        <result property="id" column="id"/>
        <result property="wmOutId" column="wm_out_id"/>
        <result property="client" column="client"/>
        <result property="cause" column="cause"/>
        <result property="certificateCodedAssaciation" column="certificate_coded_assaciation"/>
        <result property="wmOutReason" column="wm_out_reason"/>
        <result property="cigaretteQuality" column="cigarette_quality"/>
        <result property="unitCoded" column="unit_coded"/>
    </resultMap>
    <sql id="wm_out_info_column">
    id,wm_out_coded, certificate_coded, goods_id, wm_out_number, invoices_status, wm_out_date,
    storekeeper, storekeeper_id, synthesis_keeper, synthesis_keeper_id, receiver, receiver_id,
    create_time, update_by, update_time, create_by, out_type
    </sql>
    <sql id="wm_out_temporary_column">
    wm_out_id, client, cause, certificate_coded_assaciation, wm_out_reason, cigarette_quality,
    unit_coded
    </sql>
    <select id="selectPageList" resultType="wmOutTemporaryVo">
      select
      <include refid="wm_out_temporary_column"/>,<include refid="wm_out_info_column"/>,
      goods.goods_name,goods.goods_specification
      from wm_out_temporary wot
      left join wm_out_info woi on wot.wm_out_id=woi.id
      left join bs_goods_info goods on goods.id = woi.goods_id
        <where>
            woi.out_type= 2
            <if test="bo.certificateCoded!=null and bo.certificateCoded!=''">
            and  woi.certificate_coded = #{bo.certificateCoded}
            </if>
            <if test="bo.client!=null and bo.client!=''">
                and  wot.client like concat('%',#{bo.client},'%')
            </if>
            <if test="bo.cause!=null and bo.cause!=''">
                and wot.cause = #{bo.cause}
            </if>
            <if test="bo.goodsName!=null and bo.goodsName!=''">
                and   goods.goods_name  like concat('%',#{bo.goodsName},'%')
            </if>
            <if test="bo.invoicesStatus!=null and bo.invoicesStatus!=''">
                and   woi.invoices_status = #{bo.invoicesStatus}
            </if>
            <choose>
                <when test="bo.startTime!=null and bo.endTime!=null ">
                    and  woi.update_time between #{bo.startTime} and #{bo.endTime}
                </when>
                <when test="bo.startTime!=null">
                    woi.update_time &gt;= #{bo.startTime}
                </when>
                <when test="bo.endTime!=null">
                    woi.update_time &lt;= #{bo.endTime}
                </when>
            </choose>
        </where>
    </select>
    <delete id="deleteByOutId">
        delete from wm_out_temporary where wm_out_id in
        <foreach collection="ids" item="id" index="index" close=")" separator="," open="(">
            #{id}
        </foreach>
    </delete>
    <insert id="insertOutInfo">
        insert into wm_out_info (wm_out_coded, certificate_coded,
      goods_id, wm_out_number, invoices_status,
      wm_out_date, storekeeper, storekeeper_id,
      synthesis_keeper, synthesis_keeper_id, receiver,
      receiver_id, create_time, update_by,
      update_time, create_by, out_type)
    values (#{id}, #{wmOutCoded}, #{certificateCoded},
      #{goodsId}, #{wmOutNumber}, #{invoicesStatus},
      #{wmOutDate}, #{storekeeper}, #{storekeeperId},
      #{synthesisKeeper}, #{synthesisKeeperId}, #{receiver},
      #{receiverId}, #{createTime}, #{updateBy},
      #{updateTime}, #{createBy}, #{outType})
    </insert>
</mapper>
